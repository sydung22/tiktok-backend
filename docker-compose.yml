version: '3.8'

#Docker Networks
networks:
  laravel:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local

# Workflow
services:
  nginx:
    build:
      context: .
      dockerfile: ./compose/nginx/Dockerfile
    container_name: nginx
    ports:
      - "80:80"
      # Port for xdebug (ensure this matches the remote_port in the xdebug.ini)
      - "9001:9001"
      - "443:443"
    restart: always
    volumes:
      - ./source:/var/www/html:delegated
      - ./compose/nginx/certbot/conf:/etc/letsencrypt
      - ./compose/nginx/certbot/www:/var/www/certbot
    depends_on:
      - php
      - mysql
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - laravel

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    command: certonly --webroot --webroot-path=/var/www/certbot/ --email hoanganh36.work@gmail.com --agree-tos --no-eff-email --force-renewal -d utenew.tk
    volumes:
      - ./compose/nginx/certbot/conf:/etc/letsencrypt
      - ./compose/nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

  mysql:
    image: mysql:5.7.38
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./compose/mysql/my.cnf:/etc/my.cnf # ./compose/mysql/my.cnf:/etc/mysql/my.cnf
      - dbdata:/var/lib/mysql/
      - ./compose/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - laravel

  redis:
    image: "redis:alpine"
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      MYSQL_ROOT_PASSWORD: secret
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 2G
    restart: always
    depends_on:
      - mysql
    ports:
      - "8081:80"
    volumes:
      - /sessions
      - ./app/config/php.ini:/usr/local/etc/php/php.ini
    networks:
      - laravel
    links:
      - mysql

  php:
    build:
      context: .
      dockerfile: ./compose/php/Dockerfile
    container_name: php
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./source:/var/www/html:delegated
      # Enable xdebug
      - ./compose/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./compose/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    ports:
      - "9000:9000"
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: ./compose/php/composer/Dockerfile
    container_name: composer
    volumes:
      - ./source:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    networks:
      - laravel
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]

  artisan:
    build:
      context: .
      dockerfile: ./compose/php/Dockerfile
    container_name: artisan
    volumes:
      - ./source:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    user: laravel
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - laravel
